model User {
  id                     String             @id @default(cuid())
  email                  String             @unique
  username               String             @unique
  bio                    String?            @db.Text
  password               String
  passwordChangedAt      DateTime?
  passwordResetString    String?
  passwordResetExpiresIn DateTime?
  createdAt              DateTime           @default(now())
  role                   UserRole           @default(USER)
  // RELATIONS
  // 1) For booked owner one to many
  currentBooks           Book[]
  // 2) For liked books
  likedBooks             UserLikedBooks[]
  // 3) For old booked books
  oldBookings            UserPastBookings[]

  // In followers data current user is following based on junction table because of that our releation name is crossed
  followers UserFollow[] @relation("following")

  // In followings data current user is follower based on junction table because of that our releation name is crossed
  followings UserFollow[] @relation("follower")

  submittedReviews Review[]

  @@map("user")
}

enum UserRole {
  ADMIN
  USER
}
